
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # module.cluster.aws_eks_cluster.eks_cluster[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_cluster" "eks_cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mendpoint[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                  = "hearst"
      [32m+[0m [0m[1m[0mplatform_version[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                  = {
          [32m+[0m [0m"kubernetes.io/cluster/hearst" = "shared"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"kubernetes.io/cluster/hearst" = "shared"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m               = "1.19"

      [32m+[0m [0mkubernetes_network_config {
          [32m+[0m [0m[1m[0mip_family[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mservice_ipv4_cidr[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0mcluster_security_group_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mendpoint_private_access[0m[0m   = false
          [32m+[0m [0m[1m[0mendpoint_public_access[0m[0m    = true
          [32m+[0m [0m[1m[0mpublic_access_cidrs[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
        }
    }

[1m  # module.cluster.aws_iam_policy.policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "AWSLoadBalancerControllerIAMPolicy"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "hearst-load-balance-controller"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:CreateServiceLinkedRole",
                          [32m+[0m [0m"ec2:DescribeAccountAttributes",
                          [32m+[0m [0m"ec2:DescribeAddresses",
                          [32m+[0m [0m"ec2:DescribeInternetGateways",
                          [32m+[0m [0m"ec2:DescribeVpcs",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeTags",
                          [32m+[0m [0m"ec2:GetCoipPoolUsage",
                          [32m+[0m [0m"ec2:DescribeCoipPools",
                          [32m+[0m [0m"elasticloadbalancing:DescribeLoadBalancers",
                          [32m+[0m [0m"elasticloadbalancing:DescribeLoadBalancerAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DescribeListeners",
                          [32m+[0m [0m"elasticloadbalancing:DescribeListenerCertificates",
                          [32m+[0m [0m"elasticloadbalancing:DescribeSSLPolicies",
                          [32m+[0m [0m"elasticloadbalancing:DescribeRules",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetGroups",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetGroupAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetHealth",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTags",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"cognito-idp:DescribeUserPoolClient",
                          [32m+[0m [0m"acm:ListCertificates",
                          [32m+[0m [0m"acm:DescribeCertificate",
                          [32m+[0m [0m"iam:ListServerCertificates",
                          [32m+[0m [0m"iam:GetServerCertificate",
                          [32m+[0m [0m"waf-regional:GetWebACL",
                          [32m+[0m [0m"waf-regional:GetWebACLForResource",
                          [32m+[0m [0m"waf-regional:AssociateWebACL",
                          [32m+[0m [0m"waf-regional:DisassociateWebACL",
                          [32m+[0m [0m"wafv2:GetWebACL",
                          [32m+[0m [0m"wafv2:GetWebACLForResource",
                          [32m+[0m [0m"wafv2:AssociateWebACL",
                          [32m+[0m [0m"wafv2:DisassociateWebACL",
                          [32m+[0m [0m"shield:GetSubscriptionState",
                          [32m+[0m [0m"shield:DescribeProtection",
                          [32m+[0m [0m"shield:CreateProtection",
                          [32m+[0m [0m"shield:DeleteProtection",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:AuthorizeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:RevokeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:CreateSecurityGroup",
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                          [32m+[0m [0m"ec2:AuthorizeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:RevokeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:DeleteSecurityGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:CreateListener",
                          [32m+[0m [0m"elasticloadbalancing:DeleteListener",
                          [32m+[0m [0m"elasticloadbalancing:CreateRule",
                          [32m+[0m [0m"elasticloadbalancing:DeleteRule",
                          [32m+[0m [0m"elasticloadbalancing:AddTags",
                          [32m+[0m [0m"elasticloadbalancing:RemoveTags",
                          [32m+[0m [0m"elasticloadbalancing:ModifyLoadBalancerAttributes",
                          [32m+[0m [0m"elasticloadbalancing:SetIpAddressType",
                          [32m+[0m [0m"elasticloadbalancing:SetSecurityGroups",
                          [32m+[0m [0m"elasticloadbalancing:SetSubnets",
                          [32m+[0m [0m"elasticloadbalancing:DeleteLoadBalancer",
                          [32m+[0m [0m"elasticloadbalancing:ModifyTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:ModifyTargetGroupAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DeleteTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:RegisterTargets",
                          [32m+[0m [0m"elasticloadbalancing:DeregisterTargets",
                          [32m+[0m [0m"elasticloadbalancing:SetWebAcl",
                          [32m+[0m [0m"elasticloadbalancing:ModifyListener",
                          [32m+[0m [0m"elasticloadbalancing:AddListenerCertificates",
                          [32m+[0m [0m"elasticloadbalancing:RemoveListenerCertificates",
                          [32m+[0m [0m"elasticloadbalancing:ModifyRule",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.cluster.aws_iam_role.eks_cluster_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_cluster_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"eks.amazonaws.com",
                              [32m+[0m [0m"eks-fargate-pods.amazonaws.com",
                            ]
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "hearst-eks-cluster-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.cluster.aws_iam_role_policy_attachment.eks-cluster-cluster[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-cluster-cluster" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-cluster-role"
    }

[1m  # module.cluster.aws_iam_role_policy_attachment.eks-cluster-service[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-cluster-service" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-cluster-role"
    }

[1m  # module.cluster.aws_iam_role_policy_attachment.eks-load-balancer-controller[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-load-balancer-controller" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-cluster-role"
    }

[1m  # module.cluster.aws_security_group.cluster_master_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "cluster_master_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Managed by Terraform"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "hearst-master-sg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "hearst-master-sg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "hearst-master-sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.cluster.aws_security_group_rule.cluster_ingress_https[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster_ingress_https" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.network.aws_eip.vpc_iep[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "vpc_iep" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "hearst-eip"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Name" = "hearst-eip"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.network.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name" = "hearst-internet-gateway"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"Name" = "hearst-internet-gateway"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.network.aws_nat_gateway.nat[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mconnectivity_type[0m[0m    = "public"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "hearst-nat-gateway"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Name" = "hearst-nat-gateway"
        }
    }

[1m  # module.network.aws_route.nat_access[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "nat_access" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)
    }

[1m  # module.network.aws_route.public_internet_access[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "public_internet_access" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mgateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)
    }

[1m  # module.network.aws_route_table.igw_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "igw_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "hearst-public-route"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "hearst-public-route"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table.nat[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "nat" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "hearst-private-route"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "hearst-private-route"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table_association.private1a[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private1a" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.private1c[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private1c" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.public_1a[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_1a" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.public_1c[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_1c" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_subnet.private_subnet_1a[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_1a" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.101.88.0/23"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "hearst-private-1a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "hearst-private-1a"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.private_subnet_1c[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_1c" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.101.90.0/23"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "hearst-private-1c"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "hearst-private-1c"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.public_subnet_1a[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_1a" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.101.92.0/23"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "hearst-public-1a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "hearst-public-1a"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.public_subnet_1c[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_1c" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.101.94.0/23"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "hearst-public-1c"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name" = "hearst-public-1c"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.network.aws_vpc.cluster_vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "cluster_vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "10.101.88.0/21"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name" = "hearst-vpc"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Name" = "hearst-vpc"
        }
    }

[1m  # module.nodes.aws_autoscaling_policy.cpu_down[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "cpu_down" {
      [32m+[0m [0m[1m[0madjustment_type[0m[0m         = "ChangeInCapacity"
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mcooldown[0m[0m                = 300
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mmetric_aggregation_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "hearst-nodes-cpu-scale-down"
      [32m+[0m [0m[1m[0mpolicy_type[0m[0m             = "SimpleScaling"
      [32m+[0m [0m[1m[0mscaling_adjustment[0m[0m      = -1
    }

[1m  # module.nodes.aws_autoscaling_policy.cpu_up[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "cpu_up" {
      [32m+[0m [0m[1m[0madjustment_type[0m[0m         = "ChangeInCapacity"
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mcooldown[0m[0m                = 300
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mmetric_aggregation_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "hearst-nodes-cpu-scale-up"
      [32m+[0m [0m[1m[0mpolicy_type[0m[0m             = "SimpleScaling"
      [32m+[0m [0m[1m[0mscaling_adjustment[0m[0m      = 2
    }

[1m  # module.nodes.aws_cloudwatch_metric_alarm.cpu_down[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "cpu_down" {
      [32m+[0m [0m[1m[0mactions_enabled[0m[0m                       = true
      [32m+[0m [0m[1m[0malarm_actions[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0malarm_name[0m[0m                            = "hearst-nodes-cpu-low"
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mcomparison_operator[0m[0m                   = "LessThanOrEqualToThreshold"
      [32m+[0m [0m[1m[0mdimensions[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mevaluate_low_sample_count_percentiles[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mevaluation_periods[0m[0m                    = 2
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmetric_name[0m[0m                           = "CPUUtilization"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                             = "AWS/EC2"
      [32m+[0m [0m[1m[0mperiod[0m[0m                                = 120
      [32m+[0m [0m[1m[0mstatistic[0m[0m                             = "Average"
      [32m+[0m [0m[1m[0mtags_all[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mthreshold[0m[0m                             = 40
      [32m+[0m [0m[1m[0mtreat_missing_data[0m[0m                    = "missing"
    }

[1m  # module.nodes.aws_cloudwatch_metric_alarm.cpu_up[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "cpu_up" {
      [32m+[0m [0m[1m[0mactions_enabled[0m[0m                       = true
      [32m+[0m [0m[1m[0malarm_actions[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0malarm_name[0m[0m                            = "hearst-nodes-cpu-high"
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mcomparison_operator[0m[0m                   = "GreaterThanOrEqualToThreshold"
      [32m+[0m [0m[1m[0mdimensions[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mevaluate_low_sample_count_percentiles[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mevaluation_periods[0m[0m                    = 2
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmetric_name[0m[0m                           = "CPUUtilization"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                             = "AWS/EC2"
      [32m+[0m [0m[1m[0mperiod[0m[0m                                = 60
      [32m+[0m [0m[1m[0mstatistic[0m[0m                             = "Average"
      [32m+[0m [0m[1m[0mtags_all[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mthreshold[0m[0m                             = 80
      [32m+[0m [0m[1m[0mtreat_missing_data[0m[0m                    = "missing"
    }

[1m  # module.nodes.aws_eks_node_group.cluster[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_node_group" "cluster" {
      [32m+[0m [0m[1m[0mami_type[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcapacity_type[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mcluster_name[0m[0m           = "hearst"
      [32m+[0m [0m[1m[0mdisk_size[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_types[0m[0m         = [
          [32m+[0m [0m"t3.large",
        ]
      [32m+[0m [0m[1m[0mnode_group_name[0m[0m        = "hearst-node-group"
      [32m+[0m [0m[1m[0mnode_group_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnode_role_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrelease_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mresources[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"kubernetes.io/cluster/hearst" = "owned"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"kubernetes.io/cluster/hearst" = "owned"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m                = (known after apply)

      [32m+[0m [0mscaling_config {
          [32m+[0m [0m[1m[0mdesired_size[0m[0m = 2
          [32m+[0m [0m[1m[0mmax_size[0m[0m     = 10
          [32m+[0m [0m[1m[0mmin_size[0m[0m     = 2
        }

      [32m+[0m [0mupdate_config {
          [32m+[0m [0m[1m[0mmax_unavailable[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmax_unavailable_percentage[0m[0m = (known after apply)
        }
    }

[1m  # module.nodes.aws_iam_role.eks_nodes_roles[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_nodes_roles" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "hearst-eks-nodes"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.nodes.aws_iam_role_policy_attachment.cni[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cni" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-nodes"
    }

[1m  # module.nodes.aws_iam_role_policy_attachment.ecr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecr" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-nodes"
    }

[1m  # module.nodes.aws_iam_role_policy_attachment.node[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "hearst-eks-nodes"
    }

[0m[1mPlan:[0m 33 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
